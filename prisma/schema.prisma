generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int          @id @default(autoincrement())
  firstName     String
  lastName      String
  username      String       @unique
  email         String       @unique
  mobile        String
  role           String        @default("USER")
  country       String
  password      String
  wallet        Wallet?
  transactions  Transaction[]
  investments   Investment[]
  referralCode  String?
  referralBonus Float?       @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

}


model Wallet {
  id        Int      @id @default(autoincrement())
  balance   Float    @default(0)
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Transaction {
  id        Int      @id @default(autoincrement())
  type      String   // Deposit / Withdraw
  amount    Float
  status    String   @default("Pending") // Pending, Success, Failed
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InvestmentPlan {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  amount      Float      // minimum investment amount
  dailyReturn Float      // e.g., 0.1 for 10%
  duration    Int?       // in days, null for unlimited
  createdAt   DateTime   @default(now())
  investments Investment[]
}

model Investment {
  id             Int              @id @default(autoincrement())
  user           User             @relation(fields: [userId], references: [id])
  userId         Int
  plan           InvestmentPlan   @relation(fields: [planId], references: [id])
  planId         Int
  investedAmount Float
  currentAmount  Float            // includes daily profit
  startDate      DateTime         @default(now())
  endDate        DateTime?
  status          String           @default("active")
  lastProfitDate DateTime?        // tracks last daily profit payout
  isActive       Boolean          @default(true)
  createdAt      DateTime         @default(now())
}



