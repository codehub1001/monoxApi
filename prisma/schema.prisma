generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String        @unique
  password      String
  referralCode  String?
  referralBonus Float?        @default(0)
  country       String
  mobile        String
  username      String        @unique
  role          String        @default("USER")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now())
  investments   Investment[]
  transactions  Transaction[]
  wallet        Wallet?
}

model Wallet {
  id        Int      @id @default(autoincrement())
  balance   Float    @default(0)
  userId    Int      @unique
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id        Int      @id @default(autoincrement())
  type      String
  amount    Float
  status    String   @default("Pending")
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model InvestmentPlan {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  amount      Float
  dailyReturn Float
  duration    Int?
  createdAt   DateTime     @default(now())
  investments Investment[]
}

model Investment {
  id             Int            @id @default(autoincrement())
  userId         Int
  createdAt      DateTime       @default(now())
  currentAmount  Float
  endDate        DateTime?
  investedAmount Float
  isActive       Boolean        @default(true)
  lastProfitDate DateTime?
  planId         Int
  startDate      DateTime       @default(now())
  status         String         @default("active")
  plan           InvestmentPlan @relation(fields: [planId], references: [id])
  user           User           @relation(fields: [userId], references: [id])
}
